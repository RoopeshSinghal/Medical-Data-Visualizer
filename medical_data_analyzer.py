# -*- coding: utf-8 -*-
"""Medical Data Analyzer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t5H4Zd9vFHEMNfjfZ7lpcmW1EY31y3BU
"""

#importing libraires
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

url = 'https://raw.githubusercontent.com/freeCodeCamp/boilerplate-medical-data-visualizer/main/medical_examination.csv'
df = pd.read_csv(url,sep=',')
df.head()

bmi = df['weight'] / ((df['height']/100) **2)
overweight = []

for i in bmi:
 if i > 25:
    overweight.append(1)
 else:
    overweight.append(0)

df['overweight'] = overweight

df.head()

df['cholesterol'] = df['cholesterol'].apply(lambda x : 0 if x == 1 else 1)
df['gluc'] = df['gluc'].apply(lambda x : 0 if x == 1 else 1)

df.head()

df_cat = pd.melt(df, id_vars=['cardio'],
                     value_vars=['cholesterol', 'gluc', 'smoke', 'alco', 'active', 'overweight'])
print(df_cat)

df_cat = df_cat.groupby(['cardio', 'variable', 'value']).size().reset_index()
df_cat = df_cat.rename(columns={0: 'total'})
df_cat

def draw_cat_plot():

    df_cat = pd.melt(df, id_vars=['cardio'],
                     value_vars=['cholesterol', 'gluc', 'smoke', 'alco', 'active', 'overweight'])
    print(df_cat)

    df_cat = df_cat.groupby(['cardio', 'variable', 'value']).size().reset_index()
    df_cat = df_cat.rename(columns={0: 'total'})

    graph = sns.catplot(data=df_cat, kind="bar", x="variable", y="total", hue="value", col="cardio")
    fig = graph.fig

    fig.savefig('catplot.png')
    return fig

draw_cat_plot()

# Draw Heat Map
def draw_heat_map():
    # Clean the data
    df_heat = \
        df[(df['ap_lo'] <= df['ap_hi']) &
        (df['height'] >= df['height'].quantile(0.025)) &
        (df['height'] <= df['height'].quantile(0.975)) &
        (df['weight'] >= df['weight'].quantile(0.025)) &
        (df['weight'] <= df['weight'].quantile(0.975))]

    # Calculate the correlation matrix
    corr = df_heat.corr()

    # Generate a mask for the upper triangle
    mask = np.triu(np.ones_like(df_heat.corr(), dtype=bool))



    # Set up the matplotlib figure
    fig, ax = plt.subplots()

    # Draw the heatmap with 'sns.heatmap()'
    sns.heatmap(data=corr,
                annot=True,
                fmt=".1f",
                linewidth=.5,
                mask=mask,
                annot_kws={'fontsize':6},
                cbar_kws={"shrink": .7},
                square=False,
                center=0,
                vmax=0.30);


    # Do not modify the next two lines
    fig.savefig('heatmap.png')
    return fig

draw_heat_map()